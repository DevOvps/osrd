plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.6.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

java {
    sourceCompatibility = 'VERSION_11'
}

repositories {
    jcenter()
}

dependencies {
    // command line parsing
    implementation 'com.beust:jcommander:1.78'

    // XML parsing
    implementation group: 'org.dom4j', name: 'dom4j', version: '2.1.0'

    // JSON parsing
    implementation 'com.squareup.moshi:moshi:1.11.0'
    implementation 'com.squareup.moshi:moshi-adapters:1.11.0'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    // for linter annotations
    compileOnly 'net.jcip:jcip-annotations:1.0'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.1.4'
    testCompileOnly 'net.jcip:jcip-annotations:1.0'
    testCompileOnly 'com.github.spotbugs:spotbugs-annotations:4.1.4'

    // for debug IU
    implementation 'org.graphstream:gs-core:2.0'
    implementation 'org.graphstream:gs-ui-swing:2.0'

    // the logging API stub
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    // the logging API implementation
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.+'

    // ClassGraph (FastClasspathScanner)
    // https://mvnrepository.com/artifact/io.github.classgraph/classgraph
    implementation group: 'io.github.classgraph', name: 'classgraph', version: '4.8.102'
}

application {
    mainClassName = 'fr.sncf.osrd.App'
}

shadowJar {
    archiveBaseName = 'osrd'
}

run {
    enableAssertions = true
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion '8.37'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
    }
}

// enable all linter warnings, and error out on warnings
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all" << "-Werror"
    options.encoding = "UTF-8"
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    // can also be 'more' or 'default'
    effort = 'max'
    // report all diagnosed bugs
    reportLevel = 'low'
    maxHeapSize = '1g'
}

task printSettings(type: DefaultTask) {
    println "java.home " + System.getProperty('java.home')
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
  reports {
     html {
        enabled = true
     }
  }
}
