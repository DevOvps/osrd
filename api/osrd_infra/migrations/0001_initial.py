# Generated by Django 3.2.5 on 2021-08-26 12:00

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import osrd_infra.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('entity_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity_type', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='EntityNamespace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Infra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('owner', models.UUIDField(default='00000000-0000-0000-0000-000000000000', editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('namespace', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.entitynamespace')),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('owner', models.UUIDField(default='00000000-0000-0000-0000-000000000000', editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('payload', models.JSONField(validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'additionalProperties': False, 'properties': {'path': {'items': {'additionalProperties': False, 'properties': {'route': {'type': 'number'}, 'track_sections': {'items': {'additionalProperties': False, 'properties': {'begin': {'type': 'number'}, 'end': {'type': 'number'}, 'track_section': {'type': 'number'}}, 'required': ['begin', 'end', 'track_section'], 'type': 'object'}, 'type': 'array'}}, 'required': ['route', 'track_sections'], 'type': 'object'}, 'title': 'schema', 'type': 'array'}, 'steps': {'items': {'additionalProperties': False, 'properties': {'geographic': {'items': {'type': 'number'}, 'maxItems': 2, 'minItems': 2, 'type': 'array'}, 'name': {'type': 'string'}, 'position': {'additionalProperties': False, 'properties': {'offset': {'type': 'number'}, 'track_section': {'type': 'number'}}, 'required': ['offset', 'track_section'], 'type': 'object'}, 'schematic': {'items': {'type': 'number'}, 'maxItems': 2, 'minItems': 2, 'type': 'array'}, 'stop_time': {'type': 'number'}, 'suggestion': {'type': 'boolean'}}, 'required': ['name', 'position', 'suggestion', 'stop_time'], 'type': 'object'}, 'title': 'schema', 'type': 'array'}}, 'required': ['path', 'steps'], 'type': 'object'})])),
                ('geographic', django.contrib.gis.db.models.fields.LineStringField(srid=3857)),
                ('schematic', django.contrib.gis.db.models.fields.LineStringField(srid=3857)),
                ('namespace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.entitynamespace')),
            ],
        ),
        migrations.CreateModel(
            name='RollingStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique identifier for this rolling stock', max_length=255, unique=True)),
                ('owner', models.UUIDField(default='00000000-0000-0000-0000-000000000000', editable=False)),
                ('length', models.FloatField(help_text='The length of the train, in meters')),
                ('mass', models.FloatField(help_text='The mass of the train, in kilograms')),
                ('inertia_coefficient', models.FloatField(help_text='The inertia coefficient. It will be multiplied with the mass of the train to get its effective mass')),
                ('rolling_resistance', models.JSONField(help_text='The formula to use to compute rolling resistance', validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'properties': {'A': {'minimum': 0, 'type': 'number'}, 'B': {'minimum': 0, 'type': 'number'}, 'C': {'minimum': 0, 'type': 'number'}, 'type': {'const': 'davis'}}, 'required': ['type', 'A', 'B', 'C'], 'type': 'object'})])),
                ('capabilities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), help_text='A list of features the train exhibits, such as ERTMS support', size=None)),
                ('max_speed', models.FloatField(help_text='The maximum operational speed, in m/s')),
                ('startup_time', models.FloatField(help_text='The time the train takes before it can start accelerating')),
                ('startup_acceleration', models.FloatField(help_text='The maximum acceleration during startup, in m/s^2')),
                ('comfort_acceleration', models.FloatField(help_text='The maximum operational acceleration, in m/s^2')),
                ('timetable_gamma', models.FloatField(help_text='The maximum braking coefficient, for timetabling purposes, in m/s^2')),
                ('tractive_effort_curves', models.JSONField(help_text='A set of curves mapping speed (in m/s) to maximum traction (in newtons)', validators=[osrd_infra.utils.JSONSchemaValidator(limit_value={'additionalProperties': {'items': {'properties': {'max_effort': {'type': 'number'}, 'speed': {'type': 'number'}}, 'required': ['speed', 'max_effort'], 'type': 'object'}, 'title': 'schema', 'type': 'array'}, 'type': 'object'})])),
                ('traction_mode', models.CharField(max_length=128)),
                ('power_class', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.infra')),
            ],
        ),
        migrations.CreateModel(
            name='TrainSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('train_name', models.CharField(max_length=128)),
                ('departure_time', models.FloatField()),
                ('initial_speed', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TrainScheduleLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaypointComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('waypoint_type', models.IntegerField(choices=[(0, 'Buffer Stop'), (1, 'Detector')])),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='waypoint', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrainScheduleResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.JSONField()),
                ('train_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output', to='osrd_infra.trainschedule', unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='trainschedule',
            name='labels',
            field=models.ManyToManyField(blank=True, to='osrd_infra.TrainScheduleLabel'),
        ),
        migrations.AddField(
            model_name='trainschedule',
            name='path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.path'),
        ),
        migrations.AddField(
            model_name='trainschedule',
            name='rolling_stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.rollingstock'),
        ),
        migrations.AddField(
            model_name='trainschedule',
            name='timetable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train_schedules', to='osrd_infra.timetable'),
        ),
        migrations.CreateModel(
            name='TrackSectionSlopeComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('gradient', models.FloatField()),
                ('start_offset', models.FloatField()),
                ('end_offset', models.FloatField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slope_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrackSectionCurveComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('radius', models.FloatField()),
                ('start_offset', models.FloatField()),
                ('end_offset', models.FloatField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curve_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrackSectionComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('length', models.FloatField()),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='track_section', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrackAngleComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('geographic', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(379)])),
                ('schematic', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(379)])),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='track_angle', to='osrd_infra.entity')),
            ],
            options={
                'default_related_name': 'track_angle_set',
            },
        ),
        migrations.CreateModel(
            name='SwitchPositionComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('position', models.IntegerField(choices=[(0, 'Left'), (1, 'Right')])),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='switch_position_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SwitchComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='switch', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpeedSectionPartComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speed_section_part_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpeedSectionComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('speed', models.FloatField()),
                ('is_signalized', models.BooleanField()),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='speed_section', to='osrd_infra.entity')),
            ],
            options={
                'default_related_name': 'speed_section_set',
            },
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('started_by', models.UUIDField()),
                ('infra', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='osrd_infra.infra')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='osrd_infra.timetable')),
            ],
        ),
        migrations.CreateModel(
            name='SignalComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sight_distance', models.FloatField()),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='signal', to='osrd_infra.entity')),
            ],
            options={
                'default_related_name': 'signal_set',
            },
        ),
        migrations.CreateModel(
            name='RouteComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entry_direction', models.IntegerField(choices=[(0, 'Start To Stop'), (1, 'Stop To Start')])),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='route', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseGroupComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='release_group_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RailScriptComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('script', models.JSONField()),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rail_script', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperationalPointPartComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operational_point_part_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KilometricPointComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kilometric_point_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentifierComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('database', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifier_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoPointLocationComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('geographic', django.contrib.gis.db.models.fields.PointField(srid=3857)),
                ('schematic', django.contrib.gis.db.models.fields.PointField(srid=3857)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='geo_point_location', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoLineLocationComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('geographic', django.contrib.gis.db.models.fields.LineStringField(srid=3857)),
                ('schematic', django.contrib.gis.db.models.fields.LineStringField(srid=3857)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='geo_line_location', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeoAreaLocationComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('geographic', django.contrib.gis.db.models.fields.PolygonField(srid=3857)),
                ('schematic', django.contrib.gis.db.models.fields.PolygonField(srid=3857)),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='geo_area_location', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='entity',
            name='namespace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.entitynamespace'),
        ),
        migrations.CreateModel(
            name='BerthingComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_berthing', models.BooleanField()),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='berthing', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BelongsToTVDSectionComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belong_to_tvd_section_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BelongsToTrackComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belong_to_track_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BelongsToLineComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belong_to_line_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AspectConstraintComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('constraint', models.JSONField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constraint_set', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicableDirectionComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('applicable_direction', models.IntegerField(choices=[(0, 'Normal'), (1, 'Reverse'), (2, 'Both')])),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='applicable_direction', to='osrd_infra.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AspectEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'aspects',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='LineEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'lines',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='OperationalPointEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'operational point entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='OperationalPointPartEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'operational point part entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='RouteEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'routes',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='ScriptFunctionEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'script functions',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='SignalEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'signal entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='SpeedSectionEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'speed section entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='SpeedSectionPartEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'speed section part entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='SwitchEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'switch entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='TrackEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'tracks',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='TrackSectionEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'track section entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='TrackSectionLinkEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'track section link entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='TVDSectionEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'TVD section entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='WaypointEntity',
            fields=[
            ],
            options={
                'verbose_name_plural': 'waypoint entities',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('osrd_infra.entity',),
        ),
        migrations.CreateModel(
            name='TrackSectionRangeComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_offset', models.FloatField()),
                ('end_offset', models.FloatField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='range_location_set', to='osrd_infra.entity')),
                ('track_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='range_objects', to='osrd_infra.tracksectionentity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrackSectionLocationComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('offset', models.FloatField()),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='point_location', to='osrd_infra.entity')),
                ('track_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_objects', to='osrd_infra.tracksectionentity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrackSectionLinkComponent',
            fields=[
                ('component_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('begin_endpoint', models.IntegerField(choices=[(0, 'Begin'), (1, 'End')])),
                ('end_endpoint', models.IntegerField(choices=[(0, 'Begin'), (1, 'End')])),
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='track_section_link', to='osrd_infra.entity')),
                ('begin_track_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_begin_branches', to='osrd_infra.tracksectionentity')),
                ('end_track_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_end_branches', to='osrd_infra.tracksectionentity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='trackanglecomponent',
            constraint=models.CheckConstraint(check=models.Q(('geographic__lte', 379)), name='geographic__lte=379'),
        ),
        migrations.AddConstraint(
            model_name='trackanglecomponent',
            constraint=models.CheckConstraint(check=models.Q(('schematic__lte', 379)), name='schematic__lte=379'),
        ),
        migrations.AddField(
            model_name='switchpositioncomponent',
            name='switch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.switchentity'),
        ),
        migrations.AddField(
            model_name='switchcomponent',
            name='left',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='left_switch', to='osrd_infra.tracksectionlinkentity'),
        ),
        migrations.AddField(
            model_name='switchcomponent',
            name='right',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='right_switch', to='osrd_infra.tracksectionlinkentity'),
        ),
        migrations.AddField(
            model_name='speedsectionpartcomponent',
            name='speed_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.speedsectionentity'),
        ),
        migrations.AddConstraint(
            model_name='speedsectioncomponent',
            constraint=models.CheckConstraint(check=models.Q(('speed__gte', 0)), name='speed__gte=0'),
        ),
        migrations.AddField(
            model_name='signalcomponent',
            name='linked_detector',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linked_detector', to='osrd_infra.waypointentity'),
        ),
        migrations.AddField(
            model_name='routecomponent',
            name='entry_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entry_routes', to='osrd_infra.waypointentity'),
        ),
        migrations.AddField(
            model_name='routecomponent',
            name='exit_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exit_routes', to='osrd_infra.waypointentity'),
        ),
        migrations.AddField(
            model_name='releasegroupcomponent',
            name='tvd_sections',
            field=models.ManyToManyField(to='osrd_infra.TVDSectionEntity'),
        ),
        migrations.AddField(
            model_name='operationalpointpartcomponent',
            name='operational_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osrd_infra.operationalpointentity'),
        ),
        migrations.AddField(
            model_name='belongstotvdsectioncomponent',
            name='tvd_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tvd_section_components', to='osrd_infra.tvdsectionentity'),
        ),
        migrations.AddField(
            model_name='belongstotrackcomponent',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_components', to='osrd_infra.trackentity'),
        ),
        migrations.AddField(
            model_name='belongstolinecomponent',
            name='line',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_components', to='osrd_infra.lineentity'),
        ),
        migrations.AddConstraint(
            model_name='signalcomponent',
            constraint=models.CheckConstraint(check=models.Q(('sight_distance__gte', 0)), name='sight_distance__gte=0'),
        ),
    ]
