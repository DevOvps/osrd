// this project is licensed under LGPLv3.
// DO NOT ADD any dependency which isn't compatible with LGPLv3, such as:
//  - GPLv2, GPLv2+
//  - GPLv3, GPLv3+
//  - EPL 1.0
//
// The following licenses were checked for compatibility for use as libraries:
//  - Apache 2.0
//  - MIT
//  - BSD licenses
//  - EPL2.0 (see https://www.eclipse.org/legal/epl-2.0/faq.php#h.hsnsfg4e0htq)
//  - LGPLv2, LGPLv2+, LGPLv3
//  - GPLv2 with classpath exception
//  - CC Attribution

import static org.apache.tools.ant.taskdefs.condition.Os.*

plugins {
    id 'osrd.java-conventions'
    id 'osrd.java-testing'
    id 'application'
}

// region DEPENDENCIES

dependencies {
    // command line parsing
    implementation group: 'com.beust', name: 'jcommander', version: '1.78'  // Apache 2.0

    // fast primitive collections
    implementation group: 'com.carrotsearch', name: 'hppc', version: '0.9.0'  // Apache 2.0

    // XML parsing
    implementation group: 'org.dom4j', name: 'dom4j', version: '2.1.0'  // modified BSD, credits should be given to "the DOM4J Project - https://dom4j.github.io/"

    // JSON parsing
    implementation 'com.squareup.moshi:moshi:1.13.0' // Apache 2.0
    implementation 'com.squareup.moshi:moshi-adapters:1.13.0'  // Apache 2.0

    // HTTP server framework
    implementation group: 'org.takes', name: 'takes', version: '1.19'  // MIT
    implementation group: 'javax.json', name: 'javax.json-api', version: '1.1.4'  // GPLv2 with classpath exemption
    // WebSocket server
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-server', version: '2.0.1'  // EPL 2.0
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly-server', version: '2.0.1'  // EPL 2.0

    // HTTP client
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.1' // Apache 2.0

    // ClassGraph (FastClasspathScanner)
    implementation group: 'io.github.classgraph', name: 'classgraph', version: '4.8.102' // MIT

    // for debug UI
    implementation 'org.graphstream:gs-core:2.0'  // LGLPv3
    implementation 'org.graphstream:gs-ui-swing:2.0'  // LGLPv3
    implementation 'com.github.yannrichet:JMathPlot:1.0.1' // BSD

    // the logging API stub
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'  // MIT
    // the logging API implementation
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'  // EPL 1.0 (incompatible) and LGPL 2.1 (compatible)
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // Sentry
    implementation group: 'io.sentry', name: 'sentry', version: '5.0.1'  // MIT
}

// endregion

// region MAIN

application {
    mainClass = 'fr.sncf.osrd.App'
}

run {
    enableAssertions = true
}

def genExamplesDir = "$buildDir/generated_examples"

sourceSets {
    test {
        resources {
            // TODO: figure out the proper way to add generated resources to a source set
            //  https://docs.gradle.org/current/dsl/org.gradle.api.tasks.SourceSetOutput.html
            srcDirs = ["examples", genExamplesDir]
        }
    }
}

archivesBaseName = "osrd"

// endregion

// region TESTS

def genExamples = tasks.register("genExamples", Exec) {
    inputs.files(fileTree('examples/generated/')).withPropertyName('sourceFiles')
    outputs.dir(genExamplesDir).withPropertyName('outputDir')
    def python = isFamily(FAMILY_WINDOWS) ? "python.exe" : "python3"
    commandLine python, "$projectDir/examples/generated/generate.py", genExamplesDir
}

genExamples.configure {
    onlyIf { !project.hasProperty('skipGenExamples') }
}

processTestResources.configure {
    dependsOn genExamples
}

// endregion
