# Generated by Django 3.1.7 on 2021-05-31 13:35

import django.contrib.postgres.fields
from django.db import migrations, models
import osrd_infra.models.rolling_stock


class Migration(migrations.Migration):

    dependencies = [
        ('osrd_infra', '0013_identifier_database_inline'),
    ]

    operations = [
        migrations.CreateModel(
            name='RollingStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique identifier for this rolling stock', max_length=255, unique=True)),
                ('owner', models.UUIDField(default='00000000-0000-0000-0000-000000000000', editable=False)),
                ('length', models.FloatField(help_text='The length of the train, in meters')),
                ('mass', models.FloatField(help_text='The mass of the train, in kilograms')),
                ('inertia_coefficient', models.FloatField(help_text='The inertia coefficient. It will be multiplied with the mass of the train to get its effective mass')),
                ('rolling_resistance', models.JSONField(help_text='The formula to use to compute rolling resistance', validators=[osrd_infra.models.rolling_stock.JSONSchemaValidator(limit_value={'properties': {'A': {'minimum': 0, 'type': 'number'}, 'B': {'minimum': 0, 'type': 'number'}, 'C': {'minimum': 0, 'type': 'number'}, 'type': {'const': 'davis'}}, 'required': ['type', 'A', 'B', 'C'], 'type': 'object'})])),
                ('capabilities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('max_speed', models.FloatField()),
                ('startup_time', models.FloatField()),
                ('startup_acceleration', models.FloatField()),
                ('comfort_acceleration', models.FloatField()),
                ('timetable_gamma', models.FloatField()),
                ('tractive_effort_curve', models.JSONField(validators=[osrd_infra.models.rolling_stock.JSONSchemaValidator(limit_value={'items': {'properties': {'max_effort': {'type': 'number'}, 'speed': {'type': 'number'}}, 'required': ['speed', 'max_effort'], 'type': 'object'}, 'title': 'schema', 'type': 'array'})])),
            ],
        ),
    ]
