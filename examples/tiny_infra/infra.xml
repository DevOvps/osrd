<?xml version="1.0" encoding="UTF-8"?>
<railML xmlns="https://www.railml.org/schemas/3.1"
        xmlns:dc="http://purl.org/dc/elements/1.1/"
        xmlns:gml="http://www.opengis.net/gml/3.2/"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
        https://www.railml.org/schemas/3.1 https://www.railml.org/schemas/3.1/railml3.xsd
        http://www.opengis.net/gml/3.2/ http://schemas.opengis.net/gml/3.2.1/gml.xsd
        http://purl.org/dc/elements/1.1/ http://dublincore.org/schemas/xmls/qdc/2008/02/11/dc.xsd"
        version="3.1">
    <metadata>
        <dc:format>3.1</dc:format>
        <dc:identifier>3</dc:identifier>
        <dc:source>github.com/DGEXSolutions/osrd-core</dc:source>
        <dc:title xml:lang="en">A tiny railroad example</dc:title>
        <dc:language>en</dc:language>
        <dc:date>2021-02-05T09:33:34.770373</dc:date>
        <dc:creator xml:lang="en">Victor Collod</dc:creator>
        <dc:description>A hand-written sample</dc:description>
        <dc:rights>This work is licensed under LGPL</dc:rights>
    </metadata>
    <!--
    TIPS

     - netElement are either pieces of track, or groups of pieces of tracks
     - netRelations are connections between netElements
     - designators are meant to store the identifier of some object in a given database.
       for example, an object with a child: <designator register="GAIA" entry="XXX"/>
       has the identifier XXX in the GAIA database.
       https://wiki3.railml.org/wiki/Dev:Registers

    -->
    <common id="common">
        <organizationalUnits>
            <!-- https://wiki3.railml.org/wiki/Dev:InfrastructureManagers -->
            <infrastructureManager id="im_rff" code="RFF"/>
        </organizationalUnits>
        <speedProfiles>
            <speedProfile id="spp_incr" influence="increasing"/>
        </speedProfiles>
        <positioning>
            <linearPositioningSystems>
                <linearPositioningSystem id="lps_foo_to_bar" units="m" startMeasure="0.0" endMeasure="10400.0"
                                         linearReferencingMethod="absolute">
                    <name name="railway line Foo to Bar mileage" language="en"/>
                </linearPositioningSystem>
            </linearPositioningSystems>
        </positioning>
    </common>
    <infrastructure id="infra_ex">
        <topology>
            <!-- TOPOLOGY: MICRO DESCRIPTION LEVEL

                   200m                      10000m                       200m
             ________________  ___________________________________  ______________
            /                \/                                   \/              \

            +—————foo_a—————,
                             \
            +——————foo_b——————+—————————————foo_to_bar—————————————+—————bar_a————+
                       ^                                                   ^
                  station Foo                                         station Bar

            stations are implemented as operational points
            -->
            <!-- TOPOLOGY: MACRO DESCRIPTION LEVEL

                              foo                      foo_to_bar                  bar
                         {foo_a, foo_b}  —————+—————  {foo_to_bar}  —————+—————  {bar_a}

            -->
            <netElements>
                <!-- these are actual pieces of track, with actual hardware placed onto it.
                     the position of trains is tracked at this level. -->
                <netElement id="ne.micro.foo_a" length="200.0">
                    <relation ref="nr.micro.foo_a-foo_b"/>
                    <relation ref="nr.micro.foo_a-foo_to_bar"/>
                    <associatedPositioningSystem id="ne.micro.foo_a.aps">
                        <intrinsicCoordinate id="ne.micro.foo_a.aps.start" intrinsicCoord="0">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="0.0"/>
                        </intrinsicCoordinate>
                        <intrinsicCoordinate id="ne.micro.foo_a.aps.end" intrinsicCoord="1">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="200.0"/>
                        </intrinsicCoordinate>
                    </associatedPositioningSystem>
                </netElement>
                <netElement id="ne.micro.foo_b" length="200.0">
                    <relation ref="nr.micro.foo_a-foo_b"/>
                    <relation ref="nr.micro.foo_b-foo_to_bar"/>
                    <associatedPositioningSystem id="ne.micro.foo_b.aps">
                        <intrinsicCoordinate id="ne.micro.foo_b.aps.start" intrinsicCoord="0">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="0.0"/>
                        </intrinsicCoordinate>
                        <intrinsicCoordinate id="ne.micro.foo_b.aps.end" intrinsicCoord="1">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="200.0"/>
                        </intrinsicCoordinate>
                    </associatedPositioningSystem>
                </netElement>
                <netElement id="ne.micro.foo_to_bar" length="10000.0">
                    <relation ref="nr.micro.foo_a-foo_to_bar"/>
                    <relation ref="nr.micro.foo_b-foo_to_bar"/>
                    <relation ref="nr.micro.foo_to_bar-bar_a"/>
                    <associatedPositioningSystem id="ne.micro.foo_to_bar.aps">
                        <intrinsicCoordinate id="ne.micro.foo_to_bar.aps.start" intrinsicCoord="0">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="200.0"/>
                        </intrinsicCoordinate>
                        <intrinsicCoordinate id="ne.micro.foo_to_bar.aps.end" intrinsicCoord="1">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="10200.0"/>
                        </intrinsicCoordinate>
                    </associatedPositioningSystem>
                </netElement>
                <netElement id="ne.micro.bar_a" length="200.0">
                    <relation ref="nr.micro.foo_to_bar-foo_b"/>
                    <associatedPositioningSystem id="ne.micro.bar_a.aps">
                        <intrinsicCoordinate id="ne.micro.bar_a.aps.start" intrinsicCoord="0">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="10200.0"/>
                        </intrinsicCoordinate>
                        <intrinsicCoordinate id="ne.micro.bar_a.aps.end" intrinsicCoord="1">
                            <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="10400.0"/>
                        </intrinsicCoordinate>
                    </associatedPositioningSystem>
                </netElement>

                <!-- these are abstract groups of equipment, meant for high level network simulation -->
                <netElement id="ne.macro.foo">
                    <relation ref="nr.macro.foo-foo_to_bar"/>
                    <elementCollectionUnordered id="ne.macro.foo.elements">
                        <elementPart ref="ne.micro.foo_a"/>
                        <elementPart ref="ne.micro.foo_b"/>
                    </elementCollectionUnordered>
                    <associatedPositioningSystem id="ne.macro.foo.aps">
                        <intrinsicCoordinate id="ne.macro.foo.ic" intrinsicCoord="0">
                            <linearCoordinate measure="0.0" positioningSystemRef="lps_foo_to_bar"/>
                            <linearCoordinate measure="200.0" positioningSystemRef="lps_foo_to_bar"/>
                        </intrinsicCoordinate>
                    </associatedPositioningSystem>
                </netElement>
                <netElement id="ne.macro.foo_to_bar">
                    <relation ref="nr.macro.foo-foo_to_bar"/>
                    <relation ref="nr.macro.foo_to_bar-bar"/>
                    <elementCollectionUnordered id="ne.macro.foo_to_bar.elements">
                        <elementPart ref="ne.micro.foo_to_bar"/>
                    </elementCollectionUnordered>
                    <associatedPositioningSystem id="ne.macro.foo_to_bar.aps">
                        <intrinsicCoordinate id="ne.macro.foo_to_bar.ic" intrinsicCoord="0">
                            <linearCoordinate measure="200.0" positioningSystemRef="lps_foo_to_bar"/>
                            <linearCoordinate measure="10200.0" positioningSystemRef="lps_foo_to_bar"/>
                        </intrinsicCoordinate>
                    </associatedPositioningSystem>
                </netElement>
                <netElement id="ne.macro.bar">
                    <relation ref="nr.macro.foo_to_bar-bar"/>
                    <elementCollectionUnordered id="ne.macro.bar.elements">
                        <elementPart ref="ne.micro.bar_a"/>
                    </elementCollectionUnordered>
                    <associatedPositioningSystem id="ne.macro.bar.aps">
                        <intrinsicCoordinate id="ne.macro.bar.ic" intrinsicCoord="0">
                            <linearCoordinate measure="10200.0" positioningSystemRef="lps_foo_to_bar"/>
                            <linearCoordinate measure="10400.0" positioningSystemRef="lps_foo_to_bar"/>
                        </intrinsicCoordinate>
                    </associatedPositioningSystem>
                </netElement>
            </netElements>
            <netRelations>
                <!-- micro relations -->
                <netRelation id="nr.micro.foo_a-foo_b" positionOnA="1" positionOnB="1" navigability="None">
                    <elementA ref="ne.micro.foo_a"/>
                    <elementB ref="ne.micro.foo_b"/>
                </netRelation>
                <netRelation id="nr.micro.foo_a-foo_to_bar" positionOnA="1" positionOnB="0" navigability="Both">
                    <elementA ref="ne.micro.foo_a"/>
                    <elementB ref="ne.micro.foo_to_bar"/>
                </netRelation>
                <netRelation id="nr.micro.foo_b-foo_to_bar" positionOnA="1" positionOnB="0" navigability="Both">
                    <elementA ref="ne.micro.foo_b"/>
                    <elementB ref="ne.micro.foo_to_bar"/>
                </netRelation>
                <netRelation id="nr.micro.foo_to_bar-bar_a" positionOnA="1" positionOnB="0" navigability="Both">
                    <elementA ref="ne.micro.foo_to_bar"/>
                    <elementB ref="ne.micro.bar_a"/>
                </netRelation>

                <!-- macro relations -->
                <netRelation id="nr.macro.foo-foo_to_bar" positionOnA="1" positionOnB="0" navigability="Both">
                    <elementA ref="ne.macro.foo"/>
                    <elementB ref="ne.macro.foo_to_bar"/>
                </netRelation>
                <netRelation id="nr.macro.foo_to_bar-bar" positionOnA="1" positionOnB="0" navigability="Both">
                    <elementA ref="ne.macro.foo_to_bar"/>
                    <elementB ref="ne.macro.bar"/>
                </netRelation>
            </netRelations>
            <networks>
                <network id="network_main">
                    <level id="network_main.micro" descriptionLevel="Micro">
                        <networkResource ref="ne.micro.foo_a"/>
                        <networkResource ref="ne.micro.foo_b"/>
                        <networkResource ref="ne.micro.foo_to_bar"/>
                        <networkResource ref="ne.micro.bar_a"/>
                        <networkResource ref="nr.micro.foo_a-foo_b"/>
                        <networkResource ref="nr.micro.foo_a-foo_to_bar"/>
                        <networkResource ref="nr.micro.foo_b-foo_to_bar"/>
                        <networkResource ref="nr.micro.foo_to_bar-bar_a"/>
                    </level>
                    <level id="network_main.macro" descriptionLevel="Macro">
                        <networkResource ref="ne.macro.foo"/>
                        <networkResource ref="ne.macro.foo_to_bar"/>
                        <networkResource ref="ne.macro.bar"/>
                        <networkResource ref="nr.macro.foo-foo_to_bar"/>
                        <networkResource ref="nr.macro.foo_to_bar-bar"/>
                    </level>
                </network>
            </networks>
        </topology>
        <functionalInfrastructure>
            <!-- FUNCTIONAL INFRASTRUCTURE ELEMENTS

            buffer_stop_a +—————foo_a—————,
                                           \
            buffer_stop_b +——————foo_b——————+—————————————foo_to_bar—————————————+—————bar_a————+ buffer_stop_c
                                   switch_foo
            -->
            <bufferStops>
                <bufferStop id="buffer_stop_a" type="fixedBufferStop">
                    <spotLocation id="buffer_stop_a.loc" netElementRef="ne.micro.foo_a" applicationDirection="reverse" pos="0.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="0.0"/>
                    </spotLocation>
                </bufferStop>
                <bufferStop id="buffer_stop_b" type="fixedBufferStop">
                    <spotLocation id="buffer_stop_b.loc" netElementRef="ne.micro.foo_b" applicationDirection="reverse" pos="0.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="0.0"/>
                    </spotLocation>
                </bufferStop>
                <bufferStop id="buffer_stop_c" type="fixedBufferStop">
                    <spotLocation id="buffer_stop_c.loc" netElementRef="ne.micro.bar_a" applicationDirection="normal" pos="200.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="10400.0"/>
                    </spotLocation>
                </bufferStop>
            </bufferStops>
            <switchesIS>
                <switchIS id="il.switch_foo" continueCourse="left" branchCourse="right" type="ordinarySwitch">
                    <name name="Switch Foo" language="en"/>
                    <spotLocation id="switch_foo.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="reverse" pos="0.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="200.0"/>
                    </spotLocation>
                    <leftBranch netRelationRef="nr.micro.foo_b-foo_to_bar" branchingSpeed="80" joiningSpeed="80" radius="0"/>
                    <rightBranch netRelationRef="nr.micro.foo_a-foo_to_bar" branchingSpeed="60" joiningSpeed="60" radius="5OO"/>
                </switchIS>
            </switchesIS>
            <tracks>
                <!-- tracks are continuous sequences of netElements -->
                <track id="track.foo-siding" type="sidingTrack">
                    <name name="Foo siding" language="en"/>
                    <linearLocation id="track.foo_a.loc" applicationDirection="both">
                        <associatedNetElement netElementRef="ne.micro.foo_a" keepsOrientation="true" posBegin="0.0"
                                              posEnd="200.0">
                        </associatedNetElement>
                    </linearLocation>
                    <trackBegin ref="buffer_stop_a"/>
                    <trackEnd ref="il.switch_foo"/>
                    <length value="200.0" type="physical"/>
                </track>
                <track id="track.foo-station" type="mainTrack">
                    <name name="Foo station" language="en"/>
                    <linearLocation id="track.foo_b.loc" applicationDirection="both">
                        <associatedNetElement netElementRef="ne.micro.foo_b" keepsOrientation="true" posBegin="0.0"
                                              posEnd="200.0">
                        </associatedNetElement>
                    </linearLocation>
                    <trackBegin ref="buffer_stop_b"/>
                    <trackEnd ref="il.switch_foo"/>
                    <length value="200.0" type="physical"/>
                </track>
                <track id="track.foo_to_bar" type="mainTrack">
                    <linearLocation id="track.foo_to_bar.loc" applicationDirection="both">
                        <associatedNetElement netElementRef="ne.micro.foo_to_bar" keepsOrientation="true"
                                              sequence="1"
                                              posBegin="0.0"
                                              posEnd="10000.0"/>
                        <associatedNetElement netElementRef="ne.micro.bar_a" keepsOrientation="true"
                                              sequence="2"
                                              posBegin="0.0"
                                              posEnd="200.0"/>
                    </linearLocation>
                    <trackBegin ref="il.switch_foo"/>
                    <trackEnd ref="buffer_stop_c"/>
                    <length value="10200.0" type="physical"/>
                </track>
            </tracks>
            <lines>
                <line id="line.foobar" lineCategory="other:CE" lineType="mainLine" infrastructureManagerRef="im_rff">
                    <name name="The FooBar line" language="en"/>
                    <name name="Ligne FooBar" language="fr"/>
                    <linearLocation id="line.foobar.loc" applicationDirection="both">
                        <!-- the line is defined as a list of ranges over netElements. -->
                        <associatedNetElement netElementRef="ne.macro.foo" keepsOrientation="true">
                            <linearCoordinateBegin positioningSystemRef="lps_foo_to_bar" measure="0.0"/>
                            <linearCoordinateEnd positioningSystemRef="lps_foo_to_bar" measure="200.0"/>
                        </associatedNetElement>
                        <associatedNetElement netElementRef="ne.macro.foo_to_bar" keepsOrientation="true">
                            <linearCoordinateBegin positioningSystemRef="lps_foo_to_bar" measure="200.0"/>
                            <linearCoordinateEnd positioningSystemRef="lps_foo_to_bar" measure="10200.0"/>
                        </associatedNetElement>
                        <associatedNetElement netElementRef="ne.macro.foo" keepsOrientation="true">
                            <linearCoordinateBegin positioningSystemRef="lps_foo_to_bar" measure="1O200.0"/>
                            <linearCoordinateEnd positioningSystemRef="lps_foo_to_bar" measure="1O400.0"/>
                        </associatedNetElement>
                    </linearLocation>
                    <beginsInOP ref="op.station_foo"/>
                    <endsInOP ref="op.station_bar"/>
                    <lineLayout numberOfTracks="single" maxGradient="42"/>
                    <linePerformance usablePlatformLength="200" maxSpeed="80">
                        <allowedLoadingGauge ref="loading_gauge.GA"/>
                    </linePerformance>
                </line>
            </lines>
            <loadingGauges>
                <!-- see the full list of possible gauge codes https://wiki3.railml.org/wiki/Dev:TrainClearanceGauges -->
                <loadingGauge id="loading_gauge.GA" code="GA"/>
            </loadingGauges>
            <operationalPoints>
                <operationalPoint id="op.station_foo">
                    <name name="Station Foo" language="en"/>
                    <spotLocation id="op.station_foo.loc" netElementRef="ne.macro.foo" applicationDirection="both">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="100.0"/>
                    </spotLocation>
                    <designator register="_SimpleRegister" entry="FOO"/>
                    <infrastructureManagerRef ref="im_rff"/>
                    <!-- TODO: add opEquipment -->
                    <opOperations>
                        <opOperation operationalType="station" trafficType="passenger"/>
                    </opOperations>
                </operationalPoint>
                <operationalPoint id="op.station_bar">
                    <name name="Station Bar" language="en"/>
                    <spotLocation id="op.station_bar.loc" netElementRef="ne.macro.bar" applicationDirection="both">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="10300.0"/>
                    </spotLocation>
                    <designator register="_SimpleRegister" entry="BAR"/>
                    <infrastructureManagerRef ref="im_rff"/>
                    <!-- TODO: add opEquipment -->
                    <opOperations>
                        <opOperation operationalType="station" trafficType="passenger"/>
                    </opOperations>
                </operationalPoint>
            </operationalPoints>
            <!-- TODO: add platforms -->
            <!-- TVD SECTIONS / TRAIN DETECTION ELEMENTS
                 175m      50m                 9975m                      200m
             ___________  ______  _________________________________  ______________
            /           \/      \/                                 \/              \

                foo_a       switch_foo
            +————————————|——,  /
                             \
            +————————————|————+——|—————————————————————————————————+|—————————————+
                   ^                           ^                           ^
                 foo_b                       track                        bar

            | is a train detection element
            -->
            <trainDetectionElements>
                <!-- detectors around the switch -->
                <trainDetectionElement id="tde.foo_a-switch_foo" type="axleCounter">
                    <spotLocation id="tde.foo_a-switch_foo.loc" netElementRef="ne.micro.foo_a"
                                  applicationDirection="both" pos="175.0"/>
                </trainDetectionElement>
                <trainDetectionElement id="tde.foo_b-switch_foo" type="axleCounter">
                    <spotLocation id="tde.foo_b-switch_foo.loc" netElementRef="ne.micro.foo_b"
                                  applicationDirection="both" pos="175.0"/>
                </trainDetectionElement>
                <trainDetectionElement id="tde.switch_foo-track" type="axleCounter">
                    <spotLocation id="tde.switch_foo-track.loc" netElementRef="ne.micro.foo_to_bar"
                                  applicationDirection="both" pos="25.0"/>
                </trainDetectionElement>

                <!-- lonely detector for the signal guarding the station -->
                <trainDetectionElement id="tde.track-bar" type="axleCounter">
                    <spotLocation id="tde.track-bar.loc" netElementRef="ne.micro.bar_a"
                                  applicationDirection="both" pos="0.0"/>
                </trainDetectionElement>
            </trainDetectionElements>
            <!-- SIGNALS
                 175m      50m   1975m       6000m         2000m          200m
             ___________  ______  ____  ______________  ___________  ______________
            /           \/      \/    \/              \/           \/              \

            +————————————|——,
                  <     C1   \    C6  E   W4  <        A   X         C2 <
            +————————————|————+——|—————————————————————————————————+|—————————————+
                  >     C3        X   A       >        E       W5  S7   >

            < and > tell what directions the signals apply for
            X is a speed limit announce (where 10 * X is the speed limit)
            A is a speed limit begin
            E is a speed limit end
            C is a signal controlled by interlocking, not crossable if closed
            S is a signal controlled by interlocking, crossable if closed
            W is a caution signal: when enabled, it warns about the next signal's state

            C1, C3 protects the switch at foo, and are the exit signals of foo
            C6 protects the entrance of foo
            W4 warns about the state of C6
            C2 protects the foobar line
            S7 is the block signal for bar
            W5 warns about the state of S7
            -->
            <signalsIS>
                <!-- signals around the switch -->
                <signalIS id="sig.C1" isSwitchable="true">
                    <name name="C1" language="en"/>
                    <spotLocation id="sig.C1.loc" netElementRef="ne.micro.foo_a" applicationDirection="normal" pos="150.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="150.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isTrainMovementSignal/>
                </signalIS>
                <signalIS id="sig.C3" isSwitchable="true">
                    <name name="C3" language="en"/>
                    <spotLocation id="sig.C3" netElementRef="ne.micro.foo_b" applicationDirection="normal" pos="150.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="150.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isTrainMovementSignal/>
                </signalIS>

                <signalIS id="sig.C6" isSwitchable="true">
                    <name name="C6" language="en"/>
                    <spotLocation id="sig.C6.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="reverse" pos="50.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="250.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isTrainMovementSignal/>
                </signalIS>
                <signalIS id="sig.W4" isSwitchable="true">
                    <name name="W4" language="en"/>
                    <spotLocation id="sig.W4.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="reverse" pos="1025.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="1225.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isTrainMovementSignal/>
                </signalIS>

                <!-- signals at Bar -->
                <signalIS id="sig.S7" isSwitchable="true">
                    <name name="S7" language="en"/>
                    <spotLocation id="sig.S7.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="normal" pos="9975.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="10175.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isTrainMovementSignal/>
                </signalIS>
                <signalIS id="sig.W5" isSwitchable="true">
                    <name name="W5" language="en"/>
                    <spotLocation id="sig.W5.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="normal" pos="8975.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="9175.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isTrainMovementSignal/>
                </signalIS>
                <signalIS id="sig.C2" isSwitchable="true">
                    <name name="C2" language="en"/>
                    <spotLocation id="sig.C2.loc" netElementRef="ne.micro.bar_a" applicationDirection="reverse" pos="25.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="10225.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isTrainMovementSignal/>
                </signalIS>

                <!-- speed limit normal direction -->
                <signalIS id="sig.normal.mid_limit.announce" isSwitchable="false">
                    <spotLocation id="sig.normal.mid_limit.announce.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="normal" pos="1600.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="1800.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isSpeedSignal type="announcement" trainRelation="headOfTrain">
                        <refersToBeginOfSpeedSection ref="speedsection.mid_limit"/>
                    </isSpeedSignal>
                </signalIS>
                <signalIS id="sig.normal.mid_limit.begin" isSwitchable="false">
                    <spotLocation id="sig.normal.mid_limit.begin.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="normal" pos="2000.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="2200.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isSpeedSignal type="execution" trainRelation="headOfTrain">
                        <refersToBeginOfSpeedSection ref="speedsection.mid_limit"/>
                    </isSpeedSignal>
                </signalIS>
                <signalIS id="sig.normal.mid_limit.end" isSwitchable="false">
                    <spotLocation id="sig.normal.mid_limit.end.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="normal" pos="8000.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="8200.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isSpeedSignal type="execution" trainRelation="endOfTrain">
                        <refersToEndOfSpeedSection ref="speedsection.mid_limit"/>
                    </isSpeedSignal>
                </signalIS>

                <!-- speed limit reverse direction -->
                <signalIS id="sig.reverse.mid_limit.announce" isSwitchable="false">
                    <spotLocation id="sig.reverse.mid_limit.announce.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="reverse" pos="8400.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="8600.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isSpeedSignal type="announcement" trainRelation="headOfTrain">
                        <refersToBeginOfSpeedSection ref="speedsection.mid_limit"/>
                    </isSpeedSignal>
                </signalIS>
                <signalIS id="sig.reverse.mid_limit.begin" isSwitchable="false">
                    <spotLocation id="sig.reverse.mid_limit.begin.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="reverse" pos="8000.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="8200.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isSpeedSignal type="execution" trainRelation="headOfTrain">
                        <refersToBeginOfSpeedSection ref="speedsection.mid_limit"/>
                    </isSpeedSignal>
                </signalIS>
                <signalIS id="sig.reverse.mid_limit.end" isSwitchable="false">
                    <spotLocation id="sig.reverse.mid_limit.end.loc" netElementRef="ne.micro.foo_to_bar" applicationDirection="reverse" pos="2000.0">
                        <linearCoordinate positioningSystemRef="lps_foo_to_bar" measure="2200.0" lateralDistance="2.2"
                                          lateralSide="right"/>
                    </spotLocation>
                    <isSpeedSignal type="execution" trainRelation="endOfTrain">
                        <refersToEndOfSpeedSection ref="speedsection.mid_limit"/>
                    </isSpeedSignal>
                </signalIS>
            </signalsIS>
            <!-- SPEED LIMITS

                   200m          2000m       6000m          2000m          200m
             ________________  _______  _______________  ___________  ______________
            /                \/       \/               \/           \/              \
                                        mid limit: 60km/h
            +———————————————,           _______________
                             \         /               \
            +—————————————————+————————————————————————————————————+——————————————+
            -->
            <speeds>
                <speedSection id="speedsection.mid_limit" maxSpeed="60" isTemporary="false" isSignalized="true">
                    <linearLocation id="speedsection.mid_limit.loc" applicationDirection="both">
                        <associatedNetElement netElementRef="ne.micro.foo_to_bar" keepsOrientation="true">
                            <linearCoordinateBegin positioningSystemRef="lps_foo_to_bar" measure="2200.0"/>
                            <linearCoordinateEnd positioningSystemRef="lps_foo_to_bar" measure="8200.0"/>
                        </associatedNetElement>
                    </linearLocation>
                </speedSection>
            </speeds>
        </functionalInfrastructure>
        <!-- some infrastructure elements, such as level crossings, can be disabled on some day / hour
             using <infrastructureStates> -->
    </infrastructure>

    <interlocking>
        <assetsForIL id="interlocking_assets">
            <designator register="_SimpleRegister" entry="Interlocking Assets"/>
            <tvdSections>
                <tvdSection id="tvd.foo_a" isBerthingTrack="true" partialRouteReleaseDelay="PT1S"
                            residualRouteCancellationDelay="PT90S" technology="axleCounter">
                    <designator register="_SimpleRegister" entry="Foo siding track"/>
                    <hasDemarcatingBufferstop ref="buffer_stop_a"/>
                    <hasExitSignal ref="sig.C1"/>
                    <hasDemarcatingTraindetector ref="tde.foo_a-switch_foo"/>
                </tvdSection>
                <tvdSection id="tvd.foo_b" isBerthingTrack="true" partialRouteReleaseDelay="PT1S"
                            residualRouteCancellationDelay="PT90S" technology="axleCounter">
                    <designator register="_SimpleRegister" entry="Foo main track"/>
                    <hasDemarcatingBufferstop ref="buffer_stop_b"/>
                    <hasExitSignal ref="sig.C3"/>
                    <hasDemarcatingTraindetector ref="tde.foo_b-switch_foo"/>
                </tvdSection>
                <tvdSection id="tvd.switch_foo" isBerthingTrack="false" partialRouteReleaseDelay="PT1S"
                            residualRouteCancellationDelay="PT90S" technology="axleCounter">
                    <designator register="_SimpleRegister" entry="Foo entry switch"/>
                    <hasDemarcatingTraindetector ref="tde.foo_a-switch_foo"/>
                    <hasDemarcatingTraindetector ref="tde.foo_b-switch_foo"/>
                    <hasDemarcatingTraindetector ref="tde.switch_foo-track"/>
                </tvdSection>
                <tvdSection id="tvd.track" isBerthingTrack="false" partialRouteReleaseDelay="PT1S"
                            residualRouteCancellationDelay="PT90S" technology="axleCounter">
                    <designator register="_SimpleRegister" entry="Main track"/>
                    <hasExitSignal ref="sig.C6"/>
                    <hasExitSignal ref="sig.S7"/>
                    <hasDemarcatingTraindetector ref="tde.switch_foo-track"/>
                    <hasDemarcatingTraindetector ref="tde.track-bar"/>
                </tvdSection>
                <tvdSection id="tvd.bar_a" isBerthingTrack="true" partialRouteReleaseDelay="PT1S"
                            residualRouteCancellationDelay="PT90S" technology="axleCounter">
                    <designator register="_SimpleRegister" entry="Foo siding track"/>
                    <hasDemarcatingBufferstop ref="buffer_stop_c"/>
                    <hasExitSignal ref="sig.C2"/>
                    <hasDemarcatingTraindetector ref="tde.track-bar"/>
                </tvdSection>
            </tvdSections>
            <switchesIL>
                <switchIL returnsToPreferredPosition="false" id="il.switch_foo" isKeyLocked="false" maxThrowTime="PT10S"
                          typicalThrowTime="PT6S"
                          preferredPosition="left" numberOfBladeSwitchActuators="2" numberOfFrogSwitchActuators="0">
                    <designator register="_SimpleRegister" entry="Foo entry switch"/>
                    <refersTo ref="il.switch_foo"/>
                    <!-- consider adding a hasFoulingTrainDetectors -->
                    <connectedToPowerSupply ref="main_power_supply"/>
                    <branchLeft ref="track.foo-station"/>
                    <branchRight ref="track.foo-siding"/>
                </switchIL>
            </switchesIL>
            <signalsIL>
                <signalIL id="il.sig.C1" isVirtual="false" releaseSpeed="0" malfunctionSpeed="0" approachSpeed="0"
                          passingSpeed="0" releaseDelay="PT5S" function="exit" sightDistance="400">
                    <designator register="_SimpleRegister" entry="Arnau 68N2"/>
                    <refersTo ref="sig.C1"/>
                </signalIL>
                <signalIL id="il.sig.C2" isVirtual="false" releaseSpeed="0" malfunctionSpeed="0" approachSpeed="0"
                          passingSpeed="0" releaseDelay="PT5S" function="exit" sightDistance="400">
                    <designator register="_SimpleRegister" entry="Arnau 68N2"/>
                    <refersTo ref="sig.C2"/>
                </signalIL>
                <signalIL id="il.sig.C3" isVirtual="false" releaseSpeed="0" malfunctionSpeed="0" approachSpeed="0"
                          passingSpeed="0" releaseDelay="PT5S" function="exit" sightDistance="400">
                    <designator register="_SimpleRegister" entry="Arnau 68N2"/>
                    <refersTo ref="sig.C3"/>
                </signalIL>
                <signalIL id="il.sig.W4" isVirtual="false" releaseSpeed="0" malfunctionSpeed="0" approachSpeed="0"
                          passingSpeed="0" releaseDelay="PT5S" function="exit" sightDistance="400">
                    <designator register="_SimpleRegister" entry="Arnau 68N2"/>
                    <refersTo ref="sig.W4"/>
                </signalIL>
                <signalIL id="il.sig.W5" isVirtual="false" releaseSpeed="0" malfunctionSpeed="0" approachSpeed="0"
                          passingSpeed="0" releaseDelay="PT5S" function="exit" sightDistance="400">
                    <designator register="_SimpleRegister" entry="Arnau 68N2"/>
                    <refersTo ref="sig.W5"/>
                </signalIL>
                <signalIL id="il.sig.C6" isVirtual="false" releaseSpeed="0" malfunctionSpeed="0" approachSpeed="0"
                          passingSpeed="0" releaseDelay="PT5S" function="exit" sightDistance="400">
                    <designator register="_SimpleRegister" entry="Arnau 68N2"/>
                    <refersTo ref="sig.C6"/>
                </signalIL>
                <signalIL id="il.sig.S7" isVirtual="false" releaseSpeed="0" malfunctionSpeed="0" approachSpeed="0"
                          passingSpeed="0" releaseDelay="PT5S" function="exit" sightDistance="400">
                    <designator register="_SimpleRegister" entry="Arnau 68N2"/>
                    <refersTo ref="sig.S7"/>
                </signalIL>
            </signalsIL>
            <routeReleaseGroupsRear>
                <routeReleaseGroupRear id="rlg.foo_a">
                    <hasTvdSection ref="tvd.foo_a" />
                </routeReleaseGroupRear>
                <routeReleaseGroupRear id="rlg.switch_foo">
                    <hasTvdSection ref="tvd.switch_foo" />
                </routeReleaseGroupRear>
                <routeReleaseGroupRear id="rlg.foo_b">
                    <hasTvdSection ref="tvd.foo_b" />
                </routeReleaseGroupRear>
                <routeReleaseGroupRear id="rlg.bar_a">
                    <hasTvdSection ref="tvd.bar_a" />
                </routeReleaseGroupRear>
                <routeReleaseGroupRear id="rlg.foo_a-switch_foo">
                    <hasTvdSection ref="tvd.foo_a-switch_foo" />
                </routeReleaseGroupRear>
                <routeReleaseGroupRear id="rlg.foo_b-switch_foo">
                    <hasTvdSection ref="tvd.foo_b-switch_foo" />
                </routeReleaseGroupRear>
                <routeReleaseGroupRear id="rlg.track">
                    <hasTvdSection ref="tvd.track" />
                </routeReleaseGroupRear>
            </routeReleaseGroupsRear>
            <routes>
                <!-- normal direction -->
                <route id="rt.buffer_stop_a-C1" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <hasTvdSection ref="tvd.foo_a"/>
                    <hasReleaseGroup ref="rlg.foo_a"/>
                    <routeEntry id="rt.buffer_stop_a-C1.entry">
                        <refersTo ref="buffer_stop_a"/>
                    </routeEntry>
                    <routeExit id="rt.buffer_stop_a-C1.exit">
                        <refersTo ref="il.sig.C1"/>
                    </routeExit>
                </route>
                <route id="rt.buffer_stop_b-C3" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <hasTvdSection ref="tvd.foo_b"/>
                    <hasReleaseGroup ref="rlg.foo_b"/>
                    <routeEntry id="rt.buffer_stop_b-C3.entry">
                        <refersTo ref="buffer_stop_b"/>
                    </routeEntry>
                    <routeExit id="rt.buffer_stop_b-C3.exit">
                        <refersTo ref="il.sig.C3"/>
                    </routeExit>
                </route>
                <route id="rt.C1-S7" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <!-- what position switches on the route path should have -->
                    <facingSwitchInPosition id="rt.C1-S7.switch_pos" inPosition="right">
                        <refersToSwitch ref="il.switch_foo"/>
                    </facingSwitchInPosition>
                    <hasTvdSection ref="tvd.switch_foo"/>
                    <hasReleaseGroup ref="rlg.switch_foo"/>
                    <hasTvdSection ref="tvd.track"/>
                    <hasReleaseGroup ref="rlg.track"/>
                    <routeEntry id="rt.C1-S7.entry">
                        <refersTo ref="il.sig.C1"/>
                    </routeEntry>
                    <routeExit id="rt.C1-S7.exit">
                        <refersTo ref="il.sig.S7"/>
                    </routeExit>
                </route>
                <route id="rt.C3-S7" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <!-- what position switches on the route path should have -->
                    <facingSwitchInPosition id="rt.C3-S7.switch_pos" inPosition="left">
                        <refersToSwitch ref="il.switch_foo"/>
                    </facingSwitchInPosition>
                    <hasTvdSection ref="tvd.switch_foo"/>
                    <hasReleaseGroup ref="rlg.switch_foo"/>
                    <hasTvdSection ref="tvd.track"/>
                    <hasReleaseGroup ref="rlg.track"/>
                    <routeEntry id="rt.C3-S7.entry">
                        <refersTo ref="il.sig.C3"/>
                    </routeEntry>
                    <routeExit id="rt.C3-S7.exit">
                        <refersTo ref="il.sig.S7"/>
                    </routeExit>
                </route>
                <route id="rt.S7-buffer_stop_c" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <hasTvdSection ref="tvd.bar_a"/>
                    <hasReleaseGroup ref="rlg.bar_a"/>
                    <routeEntry>
                        <refersTo ref="il.sig.S7"/>
                    </routeEntry>
                    <routeExit>
                        <refersTo ref="buffer_stop_c"/>
                    </routeExit>
                </route>
                <!-- reverse direction -->
                <route id="rt.buffer_stop_c-C2" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <hasTvdSection ref="tvd.bar_a"/>
                    <hasReleaseGroup ref="rlg.bar_a"/>
                    <routeEntry id="rt.buffer_stop_c-C2.entry">
                        <refersTo ref="buffer_stop_c"/>
                    </routeEntry>
                    <routeExit id="rt.buffer_stop_a-C2.exit">
                        <refersTo ref="il.sig.C2"/>
                    </routeExit>
                </route>
                <route id="rt.C2-C6" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <hasTvdSection ref="tvd.track"/>
                    <hasReleaseGroup ref="rlg.track"/>
                    <routeEntry id="rt.C2-C6.entry">
                        <refersTo ref="il.sig.C2"/>
                    </routeEntry>
                    <routeExit id="rt.C2-C6.exit">
                        <refersTo ref="il.sig.C6"/>
                    </routeExit>
                </route>
                <route id="rt.C6-buffer_stop_a" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <facingSwitchInPosition id="rt.C6-buffer_stop_a.switch_pos" inPosition="right">
                        <refersToSwitch ref="il.switch_foo"/>
                    </facingSwitchInPosition>
                    <hasTvdSection ref="tvd.switch_foo"/>
                    <hasReleaseGroup ref="rlg.switch_foo"/>
                    <hasTvdSection ref="tvd.foo_a"/>
                    <hasReleaseGroup ref="rlg.foo_a"/>
                    <routeEntry>
                        <refersTo ref="il.sig.C6"/>
                    </routeEntry>
                    <routeExit>
                        <refersTo ref="buffer_stop_a"/>
                    </routeExit>
                </route>
                <route id="rt.C6-buffer_stop_b" locksAutomatically="false" processingDelay="PT1S">
                    <handlesRouteType ref="regular_route"/>
                    <facingSwitchInPosition id="rt.C6-buffer_stop_b.switch_pos" inPosition="right">
                        <refersToSwitch ref="il.switch_foo"/>
                    </facingSwitchInPosition>
                    <hasTvdSection ref="tvd.switch_foo"/>
                    <hasReleaseGroup ref="rlg.switch_foo"/>
                    <hasTvdSection ref="tvd.foo_b"/>
                    <hasReleaseGroup ref="rlg.foo_b"/>
                    <routeEntry>
                        <refersTo ref="il.sig.C6"/>
                    </routeEntry>
                    <routeExit>
                        <refersTo ref="buffer_stop_b"/>
                    </routeExit>
                </route>
            </routes>
            <conflictingRoutes>
                <conflictingRoute id="rt_conflicts.C1-S7">
                    <refersToRoute ref="rt.C1-S7"/>
                    <conflictsWithRoute ref="rt.C3-S7"/>
                    <conflictsWithRoute ref="rt.C2-C6"/>
                    <conflictsWithRoute ref="rt.C6-buffer_stop_a"/>
                    <conflictsWithRoute ref="rt.C6-buffer_stop_b"/>
                </conflictingRoute>
                <conflictingRoute id="rt_conflicts.C3-S7">
                    <refersToRoute ref="rt.C3-S7"/>
                    <conflictsWithRoute ref="rt.C1-S7"/>
                    <conflictsWithRoute ref="rt.C2-C6"/>
                    <conflictsWithRoute ref="rt.C6-buffer_stop_a"/>
                    <conflictsWithRoute ref="rt.C6-buffer_stop_b"/>
                </conflictingRoute>
                <conflictingRoute id="rt_conflicts.C2-C6">
                    <refersToRoute ref="rt.C2-C6"/>
                    <conflictsWithRoute ref="rt.C1-S7"/>
                    <conflictsWithRoute ref="rt.C3-S7"/>
                </conflictingRoute>
                <conflictingRoute id="rt_conflicts.C6-buffer_stop_a">
                    <refersToRoute ref="rt.C6-buffer_stop_a"/>
                    <conflictsWithRoute ref="rt.C1-S7"/>
                    <conflictsWithRoute ref="rt.C3-S7"/>
                    <conflictsWithRoute ref="rt.C6-buffer_stop_b"/>
                </conflictingRoute>
                <conflictingRoute id="rt_conflicts.C6-buffer_stop_b">
                    <refersToRoute ref="rt.C6-buffer_stop_b"/>
                    <conflictsWithRoute ref="rt.C1-S7"/>
                    <conflictsWithRoute ref="rt.C3-S7"/>
                    <conflictsWithRoute ref="rt.C6-buffer_stop_a"/>
                </conflictingRoute>
            </conflictingRoutes>
            <powerSuppliesIL>
                <powerSupplyIL id="main_power_supply" numberOfSimultaneousSwitchingActuators="2" signalVoltageMode="automatic">
                    <designator register="_SimpleRegister" entry="Main power supply"/>
                </powerSupplyIL>
            </powerSuppliesIL>
        </assetsForIL>
        <signalBoxes>
            <signalBox id="signal_box">
                <!-- region CONNECTED_ASSETS -->
                <controlsSystemAsset extentOfControl="notificationOnly">
                    <connectedSystemAsset ref="main_power_supply"/>
                </controlsSystemAsset>
                <controlsTrackAsset extentOfControl="fullControl">
                    <connectedTrackAsset ref="tvd.foo_a"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="fullControl">
                    <connectedTrackAsset ref="tvd.foo_b"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="fullControl">
                    <connectedTrackAsset ref="tvd.switch_foo"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="fullControl">
                    <connectedTrackAsset ref="tvd.track"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="fullControl">
                    <connectedTrackAsset ref="tvd.bar_a"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.switch_foo"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.sig.C1"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.sig.C2"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.sig.C3"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.sig.W4"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.sig.W5"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.sig.C6"/>
                </controlsTrackAsset>
                <controlsTrackAsset extentOfControl="steeringOnly">
                    <connectedTrackAsset ref="il.sig.S7"/>
                </controlsTrackAsset>
                <!-- endregion -->

                <controlsRoute ref="rt_conflicts.C1-S7"/>
                <controlsRoute ref="rt_conflicts.C3-S7"/>
                <controlsRoute ref="rt_conflicts.C2-C6"/>
                <controlsRoute ref="rt_conflicts.C6-buffer_stop_a"/>
                <controlsRoute ref="rt_conflicts.C6-buffer_stop_b"/>

                <implementsSignalplan id="signal_plan">
                    <!-- normal direction -->
                    <aspectRelation expectingSpeed="80.0" passingSpeed="80.0" endSectionTime="PT30S" id="aspect_rel.rt.C1-S7.caution">
                        <masterAspect>
                            <refersToSignal ref="sig.S7"/>
                            <showsAspect ref="aspect.caution"/>
                        </masterAspect>
                        <slaveAspect>
                            <refersToSignal ref="sig.C1"/>
                            <showsAspect ref="aspect.proceed"/>
                        </slaveAspect>
                        <appliesToRoute ref="rt.C1-S7"/>
                    </aspectRelation>
                    <aspectRelation expectingSpeed="0.0" passingSpeed="80.0" endSectionTime="PT30S" id="aspect_rel.rt.C1-S7.closed">
                        <masterAspect>
                            <refersToSignal ref="sig.S7"/>
                            <showsAspect ref="aspect.closed"/>
                        </masterAspect>
                        <distantAspect>
                            <refersToSignal ref="sig.W5"/>
                            <showsAspect ref="aspect.caution"/>
                        </distantAspect>
                        <slaveAspect>
                            <refersToSignal ref="sig.C1"/>
                            <showsAspect ref="aspect.proceed"/>
                        </slaveAspect>
                        <appliesToRoute ref="rt.C1-S7"/>
                    </aspectRelation>
                    <aspectRelation expectingSpeed="80.0" passingSpeed="80.0" endSectionTime="PT30S" id="aspect_rel.rt.C3-S7.caution">
                        <masterAspect>
                            <refersToSignal ref="sig.S7"/>
                            <showsAspect ref="aspect.caution"/>
                        </masterAspect>
                        <slaveAspect>
                            <refersToSignal ref="sig.C3"/>
                            <showsAspect ref="aspect.proceed"/>
                        </slaveAspect>
                        <appliesToRoute ref="rt.C3-S7"/>
                    </aspectRelation>
                    <aspectRelation expectingSpeed="0.0" passingSpeed="80.0" endSectionTime="PT30S" id="aspect_rel.rt.C3-S7.closed">
                        <masterAspect>
                            <refersToSignal ref="sig.S7"/>
                            <showsAspect ref="aspect.closed"/>
                        </masterAspect>
                        <distantAspect>
                            <refersToSignal ref="sig.W5"/>
                            <showsAspect ref="aspect.caution"/>
                        </distantAspect>
                        <slaveAspect>
                            <refersToSignal ref="sig.C3"/>
                            <showsAspect ref="aspect.proceed"/>
                        </slaveAspect>
                        <appliesToRoute ref="rt.C3-S7"/>
                    </aspectRelation>
                    <!-- reverse direction -->
                    <aspectRelation expectingSpeed="80.0" passingSpeed="80.0" endSectionTime="PT30S" id="aspect_rel.rt.C2-C6.caution">
                        <masterAspect>
                            <refersToSignal ref="sig.C6"/>
                            <showsAspect ref="aspect.caution"/>
                        </masterAspect>
                        <slaveAspect>
                            <refersToSignal ref="sig.C2"/>
                            <showsAspect ref="aspect.proceed"/>
                        </slaveAspect>
                        <appliesToRoute ref="rt.C2-C6"/>
                    </aspectRelation>
                    <aspectRelation expectingSpeed="0.0" passingSpeed="80.0" endSectionTime="PT30S" id="aspect_rel.rt.C2-C6.closed">
                        <masterAspect>
                            <refersToSignal ref="sig.C6"/>
                            <showsAspect ref="aspect.closed"/>
                        </masterAspect>
                        <distantAspect>
                            <refersToSignal ref="sig.W4"/>
                            <showsAspect ref="aspect.caution"/>
                        </distantAspect>
                        <slaveAspect>
                            <refersToSignal ref="sig.C2"/>
                            <showsAspect ref="aspect.proceed"/>
                        </slaveAspect>
                        <appliesToRoute ref="rt.C2-C6"/>
                    </aspectRelation>
                </implementsSignalplan>
            </signalBox>
        </signalBoxes>
        <specificIMs>
            <specificIM id="SNCF">
                <designator register="_SimpleRegister" entry="SNCF (test data)"/>
                <ownsSetsOfAssets ref="interlocking_assets"/>
                <usesTypes>
                    <hasAspect id="aspect.closed" genericAspect="closed">
                        <designator register="_SimpleRegister" entry="Red light"/>
                    </hasAspect>
                    <hasAspect id="aspect.caution" genericAspect="caution">
                        <designator register="_SimpleRegister" entry="Yellow light (Red signal ahead)"/>
                    </hasAspect>
                    <hasAspect id="aspect.proceed" genericAspect="proceed">
                        <designator register="_SimpleRegister" entry="Green light"/>
                    </hasAspect>

                    <hasRouteType id="regular_route" genericRouteType="normal">
                        <designator register="_SimpleRegister" entry="A route like any other"/>
                    </hasRouteType>
                    <hasRouteType id="shunting_route" genericRouteType="shunting">
                        <designator register="_SimpleRegister" entry="A route used for maneuvers"/>
                    </hasRouteType>
                </usesTypes>
            </specificIM>
        </specificIMs>
    </interlocking>
</railML>
